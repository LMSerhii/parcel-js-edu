{"mappings":"AAyOAA,QAAQC,IAAI,KAEZC,YAAW,KACTF,QAAQC,IAAI,IAAI,GACf,KAEHC,YAAW,KACTC,QAAQC,UAAUC,MAAK,KACrBL,QAAQC,IAAI,IAAI,GAChB,GACD,GAEHE,QAAQC,UAAUC,MAAK,KACrBL,QAAQC,IAAI,IAAI,IAGlBD,QAAQC,IAAI","sources":["src/js/module_9.js"],"sourcesContent":["// import * as basicLightbox from 'basiclightbox';\n\n// const box = document.querySelector('.js-box');\n// const timeText = document.querySelector('.js-time');\n// const timeText2 = timeText.nextElementSibling;\n// const timeText3 = timeText2.nextElementSibling;\n// const timeText4 = timeText3.nextElementSibling;\n// const timeText5 = timeText4.nextElementSibling;\n// const timeText6 = timeText5.nextElementSibling;\n// const timeText7 = timeText6.nextElementSibling;\n\n// const days = [\n//   'Неділя',\n//   'Понеділок',\n//   'Вівторок',\n//   'Середа',\n//   'Четвер',\n//   \"П'ятниця\",\n//   'Суббота',\n// ];\n\n// const months = [\n//   'Січень',\n//   'Лютий',\n//   'Березень',\n//   'Квітень',\n//   'Травень',\n//   'Червень',\n//   'Липень',\n//   'Серпень',\n//   'Вересень',\n//   'Жовтень',\n//   'Листопад',\n//   'Грудень',\n// ];\n\n// setInterval(() => {\n//   const date = new Date();\n//   timeText.textContent = date;\n//   timeText2.textContent = 'День місяця: ' + date.getDate();\n//   timeText3.textContent = 'День тижня: ' + days[date.getDay()];\n//   timeText4.textContent = 'Рік: ' + date.getFullYear();\n//   timeText5.textContent = 'Місяць: ' + months[date.getMonth()];\n//   timeText6.textContent = `Час: ${date\n//     .getHours()\n//     .toString()\n//     .padStart(2, '0')} : ${date\n//     .getMinutes()\n//     .toString()\n//     .padStart(2, '0')} : ${date.getSeconds().toString().padStart(2, '0')} `;\n//   timeText7.textContent = Date.now();\n// }, 1000);\n\n// const timer = document.querySelector('.js-timerBox');\n// const timer__counter = document.querySelector('.js-counter');\n\n// // console.log(timer__counter);\n\n// let counter = 10;\n\n// setTimeout(() => {\n//   timer.style.display = 'block';\n//   const intervalId = setInterval(() => {\n//     timer__counter.textContent = counter.toString().padStart(2, '0');\n//     if (!counter) {\n//       timer__counter.textContent = 'x';\n//       clearInterval(intervalId);\n//       timer__counter.addEventListener('click', onClick);\n//     }\n//     counter -= 1;\n//   }, 1000);\n// }, 5000);\n\n// function onClick() {\n//   timer.style.display = 'none';\n// }\n\n// const timer = document.querySelector('.js-timerBox');\n// const timer__counter = document.querySelector('.js-counter');\n\n// let counter = 22;\n\n// setTimeout(() => {\n//   const instance = basicLightbox.create(\n//     `\n//           <div class=\"modal\">\n//               <div class=\"timer js-timerBox\">\n//                   <h2 class=\"timer__title\">Реклама</h2>\n//                   <p class=\"timer__text\">\n//                       Реклама вимкнеться через:\n//                       <span class=\"timer__counter js-counter\">${counter}</span>\n//                   </p>\n//               </div>\n//           </div>\n//       `,\n//     {\n//       closable: false,\n//     }\n//   );\n\n//   instance.show(() => {\n//     const value = document.querySelector('.js-counter');\n//     const intervalId = setInterval(() => {\n//       value.textContent = counter;\n\n//       if (!counter) {\n//         clearInterval(intervalId);\n//         instance.close();\n//       }\n\n//       counter -= 1;\n//     }, 1000);\n//   });\n// }, 5000);\n\n// NOTIFICATIONS\n\n// const refs = {\n//   notification: document.querySelector('.js-note'),\n// };\n\n// refs.notification.addEventListener('click', onClick);\n\n// let timeoutId = null;\n\n// timeoutId = setTimeout(() => {\n//   closeNotification(refs.notification);\n// }, 10000);\n\n// function onClick(evt) {\n//   closeNotification(evt.target);\n//   clearTimeout(timeoutId);\n// }\n\n// function closeNotification(element) {\n//   element.style.translate = '320px 0';\n// }\n\n/**\n  |============================\n  | Promise\n  |============================\n*/\n\n// console.log('Request data ...');\n\n// setTimeout(() => {\n//   console.log('Preparing data ...');\n\n//   const data = {\n//     server: 'AWS',\n//     port: 2000,\n//     status: 'Active',\n//   };\n\n//   setTimeout(() => {\n//     data.modified = true;\n//     console.log('Received data', data);\n//   }, 3000);\n// }, 3000);\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     console.log('Prepering data ...');\n\n//     const data = {\n//       server: 'AWS',\n//       port: 5000,\n//       status: 'Active',\n//     };\n\n//     resolve(data);\n//   }, 3000);\n// });\n\n// promise\n//   .then(data => {\n//     return new Promise((resolve, reject) => {\n//       setTimeout(() => {\n//         data.modified = true;\n//         resolve(data);\n//       }, 3000);\n//     });\n//   })\n//   .then(clientData => {\n//     clientData.fromPromise = true;\n//     return clientData;\n//   })\n//   .then(data => {\n//     console.log('Modified', data);\n//   })\n//   .catch(err => {\n//     console.error('Error', err);\n//   })\n//   .finally(() => {\n//     console.log('Finally');\n//   });\n\n// const sleep = ms => {\n//   return new Promise(resolve => {\n//     setTimeout(() => resolve(), ms);\n//   });\n// };\n\n// // sleep(2000).then(() => console.log('After 2 seconds'));\n// // sleep(4000).then(() => console.log('After 4 seconds'));\n// // sleep(6000).then(() => console.log('After 6 seconds'));\n\n// Promise.all([sleep(2000), sleep(4000), sleep(6000)]).then(() => {\n//   console.log('Completed all promises');\n// });\n\n// function factorial(n) {\n//   if (n < 2) {\n//     return 1;\n//   }\n//   console.log(n);\n\n//   return n * factorial(n - 1);\n// }\n\n// console.log(factorial(100005));\n\n// function factorial(n) {\n//   let result = 1;\n//   for (let i = n; i > 1; i--) {\n//     result *= i;\n//   }\n//   return result;\n// }\n\n// console.log(factorial(5));\n\nconsole.log('1');\n\nsetTimeout(() => {\n  console.log('2');\n}, 2000);\n\nsetTimeout(() => {\n  Promise.resolve().then(() => {\n    console.log('3');\n  });\n}, 0);\n\nPromise.resolve().then(() => {\n  console.log('4');\n});\n\nconsole.log('5');\n"],"names":["console","log","setTimeout","Promise","resolve","then"],"version":3,"file":"module_9.0c108b3a.js.map"}